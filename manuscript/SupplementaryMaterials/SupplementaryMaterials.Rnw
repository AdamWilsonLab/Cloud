\documentclass{article}

\usepackage{float}
\usepackage{natbib}
%\usepackage[backend=bibtex]{biblatex}

\title{Appendices}
\author{Adam M. Wilson, Walter Jetz}


\begin{document}


\maketitle

\tableofcontents
\appendix

% Make the figures have SM before number
\makeatletter 
\renewcommand{\thefigure}{SM\@arabic\c@figure}
\makeatother

<<setup, eval=T,results='hide',echo=F,message=F,cache=F>>=
## some setup
opts_knit$set(progress = TRUE, verbose = TRUE,root.dir="../../",cache=T)
opts_chunk$set(comment=NA, eval=T,results='hide',echo=F,message=F,fig.width=7, fig.height=6,cache=T)

bigdata="/mnt/data/personal/adamw/projects/cloud/"


@

<<loaddata>>=
## Run the setup script
source("analysis/setup.R")

## uncorrected data
mod=raster(list.files("/mnt/data2/projects/cloud/mcd09tif",pattern="MOD09_01_mean.tif",full=T))
modc=raster(list.files("/mnt/data2/projects/cloud/mcd09ctif",pattern="MOD09_01_mean.tif",full=T))

myd=raster(list.files("/mnt/data2/projects/cloud/mcd09tif",pattern="MYD09_01_mean.tif",full=T))
mydc=raster(list.files("/mnt/data2/projects/cloud/mcd09ctif",pattern="MYD09_01_mean.tif",full=T))


## load land data for nice plotting
land=readShapePoly("data/gshhs/GSHHS_c_L1.shp",force_ring=TRUE)
projection(land)="+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
CP <- as(extent(-180, 180, -60, 84), "SpatialPolygons")
proj4string(CP) <- CRS(proj4string(land))
coast=as(land[land$area>50,],"SpatialLines")
## Clip the map
land <- gIntersection(land, CP, byid=F)
coast <- gIntersection(coast, CP, byid=F)

## plotting parameters
n=100
at=seq(0,100,length=n)
colr=colorRampPalette(c("black","green","red"))
cols=colr(n)

## set plotting parameters
my.theme = trellis.par.get()
my.theme$strip.background=list(col="transparent")
trellis.par.set(my.theme)

greg=list(ylim=c(-60,84),xlim=c(-180,180))
    
bgr=function(x,n=100,br=0,c1=c("darkblue","blue","grey"),c2=c("grey","red","purple")){
    at=unique(c(seq(min(x,na.rm=T),max(x,na.rm=T),len=n)))
    bg=colorRampPalette(c1)
    gr=colorRampPalette(c2)
    return(list(at=at,col=c(bg(sum(at<br)),gr(sum(at>=br)))))
}

@

\section{Methods: Noise Removal}

The MODIS orbit results in incomplete daily coverage in the mid-latitudes, resulting in unequal observation frequency in nearly longitudinal banding between approximately -30$^o$ and 30$^o$ latitude.  We used the Variational Stationary Noise Remover (VSNR,available at \url{http://www.math.univ-toulouse.fr/~weiss/Codes/VSNR/VNSR_VariationalStationaryNoiseRemover.html}) to identify and remove these artefacts. The VSNR was well suited to this situation because it allows specification of the shape and scale of the 'noise'.  We explored various filter dimensions and visually evaluated the output to remove We used a gabor filter with y=200, x=5, and $\theta$=15 for Terra and $\theta$=-15 for Aqua to acc


<<Sahara,dev='png',fig.cap="Comparison of January cloud frequency over the Southwestern Sahara from A) corrected Terra and B) uncorrected Terra, C) Uncorrected Aqua, and D) Corrected Aqua.  Note the banding in the uncorrected data resulting from variable observation freuqncy due to orbital artefacts of the MODIS Satellite.">>=
getwd()
## pick regions to illustrate
regs=list(
  Sahara=extent(c(-10,10,0,20))
  )

r="Sahara"
dt=crop(stack(mod,modc,myd,mydc),regs[[r]])/100
names(dt)=c("A)Uncorrected_Terra ","B)Corrected_Terra","C)Uncorrected_Aqua","D)Corrected_Aqua")
names(dt)
pars=list(layout.heights=list(key.bottom=2,key.top=1),layout.widths = list(axis.key.padding = 3,axis.left=0.6))

levelplot(dt,col.regions=grey(seq(0,1,len=100)),at=seq(0,100,len=101),
    cuts=99,margin=F,max.pixels=1e6,par.settings = pars)+layer(sp.lines(coast))
@

\section{Validation}

This appendix includes details of the validation procedure.

<<Validation_LoadData>>=
## read in data

cldm=read.csv("data/validation/cldm.csv",row.names=NULL)
st=readOGR("data/validation","stations")
## month factors
cldm$month2=factor(cldm$month,labels=month.name,ordered=T)

### Drop valitation station-months with fewer than 20 years of data for full record or less than 10 years for MODIS-era record
cldm$cld_all[cldm$cldn_all<20]=NA
cldm$cldsd_all[cldm$cldn_all<20]=NA

cldm$cld[cldm$cldn<10]=NA
cldm$cldsd[cldm$cldn<10]=NA

cldm$seas=ifelse(cldm$month%in%c(12,1,2),"DJF",
                 ifelse(cldm$month%in%3:4,"MAM",
                        ifelse(cldm$month%in%5:8,"JJA",
                               ifelse(cldm$month%in%9:11,"SON",NA))))
cldm$seas=factor(cldm$seas,levels=c("DJF","MAM","JJA","SON"),ordered=T)

## compute seasonal means
cldml=melt(cldm,id.vars=c("StaID","lat","lon","lulcc","biome","seas"),measure.vars=c("cld_all","cldsd_all","cldn_all","cld","cldsd","cldn","mod09","mod09sd"))
clds=cast(cldml,StaID+lat+lon+lulcc+biome+seas~variable,value="value",fun=mean,na.rm=T)

# get residuals of simple linear model
cldm$resid=NA
cldm$resid[!is.na(cldm$cld_all)&!is.na(cldm$mod09)]=residuals(lm(mod09~cld_all,data=cldm[!is.na(cldm$cld_all)&!is.na(cldm$mod09),]))

# get residuals of simple linear model
cldm$difm_all=cldm$mod09-cldm$cld_all
cldm$difm=cldm$mod09-cldm$cld

@

<<GetVariables>>=
########################################
### Some stats 
## number of stations retained
nstation_all=length(unique(cldm$StaID[!is.na(cldm$cld_all)]))
nstation_mod=length(unique(cldm$StaID[!is.na(cldm$cld)]))

# approximate size of M*D09GA archive - get total size for one day from the USGS website
size=as.numeric(
  sub("M","",
      grep("[0-9]*M$",
           scan("http://e4ftl01.cr.usgs.gov/MOLT/MOD09GA.005/2000.04.30/",what="char"),
           value=T)))
## extract all filesizes in MB (all the HDFs) and sum them and covert to TB for the length of the full record
tsize=sum(size)/1024/1024*as.numeric(as.Date("2014-03-31")-as.Date("2000-02-24"))*2

## get HPD intervals
hpd_resid=HPDinterval(as.mcmc(cldm$resid))#,c(0.025,0.25,0.5,0.75,0.975),na.rm=T)
hpd_cld=HPDinterval(as.mcmc(cldm$difm))#,c(0.025,0.25,0.5,0.75,0.975),na.rm=T)
hpd_cld_all=HPDinterval(as.mcmc(cldm$difm_all))#,c(0.025,0.25,0.5,0.75,0.975),na.rm=T)

@

\subsection{Station Observations}

The monthly CF were validated using a global observational dataset of synoptic weather reports collected at 5388 stations over 1971-2009 (Eastman and Warren 2012).  We extracted the mean "total cloud" amount for each month, which represents the mean proportion of the sky that was covered by all types of cloud during the observations in that month.  Comparison of these observations to satellite data must take into account that the sampling radius of these observations (the visible sky) depends on cloud height, cloud thickness, the curvature of the earth, and other factors, but is typically much larger than a single 1km MODIS pixel.  We followed Dybbroe, Karlsson, and Thoss (2005) and took the mean monthly MODCF for a circle with 16km radius around each station location.  Additionally, this converts the temporal MODCF to mean cloud amount within the sample radius to make it comparable to the station observations.

\subsubsection{Monthly Validation}

The monthly MODCF (including data from 2000-2013) were compared to station observations using linear models over the full station record (1970-2009) and the MODIS era (2000-2009) to assess accuracy and relevance of the 14-year satellite-derived data for estimating long-term monthly climatologies.  For the full record comparison, the station dataset was filtered to include only stations with at least 20 observations per month for at least 20 years, which retained \Sexpr{nstation_all} stations.  Several countries (notably the USA, Canada, and New Zealand) converted from human cloud observations to automated laser ceilometers over the past decade leading to a decline in the number of observations over 1997-2009 (Eastman and Warren 2012). For the MODIS era comparison, we included only stations with at least 20 observations per month for the full 10-year period (2000-2009), so the number of stations available was reduced to \Sexpr{nstation_mod}. 


<<monthscatter,fig.cap="Mean monthly cloud amount over 1970-2009 from 5388 global stations versus mean 2000-2009 MOD09 cloud frequency by month.  Coefficient of determination is shown in each panel.  Colors represent the number of monthly station observations within each grid cell of the scatterplot.">>=
hmcols=colorRampPalette(c("grey","blue","red","purple"))
#hmcols=colorRampPalette(c(grey(.8),grey(.3),grey(.2)))
tr=c(0,20)
colkey <- draw.colorkey(list(col = hmcols(tr[2]), at = tr[1]:tr[2],height=.25))

xyplot(cld~mod09|month2,data=cldm,panel=function(x,y,subscripts){
  n=50
  bins=seq(0,100,len=n)
  tb=melt(as.matrix(table(
    x=cut(x,bins,labels=bins[-1]),
    y=cut(y,bins,labels=bins[-1]))))
  qat=unique(tb$value)
  print(max(qat))
  qat=tr[1]:tr[2]#unique(tb$value)
  panel.levelplot(tb$x,tb$y,tb$value,at=qat,col.regions=c("transparent",hmcols(length(qat))),subscripts=1:nrow(tb))
#  panel.abline(0,1,col="black",lwd=2)
  panel.abline(lm(y ~ x),col="black",lwd=2)
#  panel.ablineq(lm(y ~ x), r.sq = TRUE,at = 0.6,pos=1, offset=0,digits=2,col="blue")
  panel.text(70,10,bquote(paste(R^2,"=",.(round(summary(lm(y ~ x))$r.squared,2)))),cex=1)
},asp=1,scales=list(at=seq(0,100,len=6),useRaster=T,colorkey=list(width=.5,title="Number of Stations")),
          ylab="NDP Mean Cloud Amount (%)",xlab="MODCF Cloud Frequency (%)",
              legend= list(right = list(fun = colkey)))+ layer(panel.abline(0,1,col="grey",lwd=2),under=T)
@


<<mapresidmonth,dev="png",fig.cap="Histogram and spatial distribution of residuals from linear model between station and satellite cloud amount at station locations.  Negative (positive) values indicate locations where MODCF was less than (greater than) expected given the global relationship between MODCF and station observations.">>=
colat=bgr(cldm$resid)
phist=histogram(cldm$resid,breaks=colat$at,border=NA,col=colat$col,xlim=c(-30,30),type="count",xlab="MODCF Residuals")#,seq(0,1,len=6),na.rm=T)
pmap=xyplot(lat~lon|month2,data=cldm,groups=cut(cldm$resid,rev(colat$at)),
       par.settings=list(superpose.symbol=list(col=colat$col)),pch=16,cex=.25,
       auto.key=F,#list(space="right",title="Difference\n(MOD09-NDP026D)",cex.title=1),asp=1,
       ylab="Latitude",xlab="Longitude")+
  layer(sp.lines(coast,col="black",lwd=.1),under=F)

print(phist,position=c(0,.75,1,1),more=T)
print(pmap,position=c(0,0,1,.78))
@



\subsubsection{Seasonal Validation}
In addition to monthly validation we also performed the same validation on the seasonal (DFJ,MAM,JJA,SON) mean values for MODCF and the station observations.

<<seasscatter>>=
tr2=c(0,37)
xyplot(cld_all~mod09|seas,data=clds,panel=function(x,y,subscripts){
  n=75
  bins=seq(0,100,len=n)
  tb=melt(as.matrix(table(
    x=cut(x,bins,labels=bins[-1]),
    y=cut(y,bins,labels=bins[-1]))))
  qat=unique(tb$value)
  print(max(qat))
  qat=tr2[1]:tr2[2]#unique(tb$value)
  panel.levelplot(tb$x,tb$y,tb$value,at=qat,col.regions=c("transparent",hmcols(length(qat))),subscripts=1:nrow(tb))
#  panel.abline(0,1,col="black",lwd=2)
  panel.abline(lm(y ~ x),col="black",lwd=2)
#  panel.ablineq(lm(y ~ x), r.sq = TRUE,at = 0.6,pos=1, offset=0,digits=2,col="blue")
  panel.text(70,10,bquote(paste(R^2,"=",.(round(summary(lm(y ~ x))$r.squared,2)))),cex=1)
},asp=1,scales=list(at=seq(0,100,len=6),useRaster=T,colorkey=list(width=.5,title="Number of Stations")),
          ylab="NDP Mean Cloud Amount (%)",xlab="MODCF Cloud Frequency (%)",
              legend= list(right = list(fun = colkey)))+ layer(panel.abline(0,1,col="grey",lwd=2),under=T)
@

<<seasmapresid,dev="png">>=
clds$resid=NA
# get residuals of simple linear model
clds$resid[!is.na(clds$cld_all)&!is.na(clds$mod09)]=residuals(lm(mod09~cld_all,data=clds[!is.na(clds$cld_all)&!is.na(clds$mod09),]))
colat=bgr(clds$resid)
phist=histogram(clds$resid,breaks=colat$at,border=NA,col=colat$col,xlim=c(-30,30),type="count",xlab="MODCF Residuals")#,seq(0,1,len=6),na.rm=T)
pmap=xyplot(lat~lon|seas,data=clds,groups=cut(clds$resid,rev(colat$at)),
       par.settings=list(superpose.symbol=list(col=colat$col)),pch=16,cex=.25,
       auto.key=F,#list(space="right",title="Difference\n(MOD09-NDP026D)",cex.title=1),asp=1,
       ylab="Latitude",xlab="Longitude")+
  layer(sp.lines(coast,col="black",lwd=.1),under=F)

print(phist,position=c(0,.75,1,1),more=T)
print(pmap,position=c(0,0,1,.78))
@

\subsection{Temporal Stability}

<<tempsubset>>=
## spatialy subset data to stations at least 10km apart
st2=remove.duplicates(st,zero=10)

## Subset data
## drop missing observations
cldm.t=cldm[!is.na(cldm$cld_all)&!is.na(cldm$mod09)&!is.na(cldm$biome),]
cldm.t=cldm.t[cldm.t$lat>=-60,]
#  make sure all stations have all mod09 data
stdrop=names(which(tapply(cldm.t$month,cldm.t$StaID,length)!=12))
cldm.t=cldm.t[!cldm.t$StaID%in%stdrop,]
# Keep only stations at least 10km apart 
cldm.t=cldm.t[cldm.t$StaID%in%st2$id,]
## Subset to only some months, if desired
#cldm.t=cldm.t[cldm.t$month%in%1:3,]

### Compare time periods
library(texreg)
 extract.lm <- function(model) {
     s <- summary(model)
     names <- rownames(s$coef)
     co <- s$coef[, 1]
     se <- s$coef[, 2]
     pval <- s$coef[, 4]
     rs <- s$r.squared
     n <- as.integer(nobs(model))
     rmse=sqrt(mean((residuals(s)^2)))
     gof <- c(rs, rmse, n)
     gof.names <- c("R-Squared","RMSE","n")
     tr <- createTexreg(coef.names = names, coef = co, se = se, 
                        pvalues = pval, gof.names = gof.names, gof = gof)
     return(tr)
 }
setMethod("extract", signature = className("lm", "stats"),definition = extract.lm)
@

To assess the accuracy of the MODCF product in estimating multi-decadal cloud frequencies, we used linear models between the 2000-2014 satellite climatologies and station observations divided into two periods including the full station record (1970-2009) and the MODIS-era subset (2000-2009).     

<<modcomparetable,results='asis'>>=
### Compare two time periods
lm_all1=lm(cld_all~mod09,data=cldm[!is.na(cldm$cld_all)&cldm$cldn_all>=10,])
lm_mod=lm(cld~mod09,data=cldm[!is.na(cldm$cld)&cldm$cldn==10,])

mods=list("1970-2009"=lm_all1,"2000-2009"=lm_mod)

#screenreg(mods,digits=2,single.row=T,custom.model.names=names(mods),custom.coef.names = c("Intercept", "MODCF"))

texreg(mods,custom.model.names = names(mods),custom.coef.names = c("Intercept", "MODCF"),
        single.row = T,caption="Comparison of MODCF accuracy over two time periods, the full station record (1970-2009) and the 'MODIS-era' (2000-2014).")
@

\subsection{Latitudinal Effects}

The MODCF tends to overestimate CF at higher latitudes in winter months, and underestimate it in summer months.  

<<latbiasboxplot,fig.cap="Boxplots of MODCF-Station anomolies by season and 20-degree latitudinal bin.  Boxplot width is proportional to the number of available validation data.  Boxplot notches indicate approximate confidence intervals around the mean value in each group.">>=
## add latitudinal bins to cldm
cldm$latbin=cut(cldm$lat,seq(-90,90,by=20),include.lowest=T)

bwcols=list(col=grey(0.4),pch=16,cex=.5)
bwplot(latbin~difm|seas,type=c("p","smooth"),data=cldm,cex=.25,pch=16,xlab="Validation Error (MODCF-Station)",ylab="20-Degree Latitude Bin",fill="grey",layout=c(4,1),scales=list(x=list(rot=45)),
       par.settings = list(plot.symbol=bwcols,box.dot =bwcols),notch=T,varwidth=T)+
  layer(panel.abline(h=5,col="grey"),under=T)+
  layer(panel.abline(v=0,col="red"),under=T)
@


% <<latbiasGAM>>=
% m1=gam(mod09~cld_all+s(abs(lat))+seas,data=cldm)
% #m2=lm(mod09~cld_all+abs(lat)+I(abs(lat)^2)+seas,data=cldm)
% 
% summary(m1)
% plot(m1,xlab="Absolute Value of Latitude",ylab="Latitudinal Bias in MODCF",resid=T,seWithMean=T,col="darkblue")
% abline(h=0)
% plot(m2)
% @


<<table:latbias>>=
sumfun=function(x){
    n <- length(na.omit(x))
    rmse=sqrt(mean((x^2),na.rm=T))
    if(is.nan(rmse))return("")
    paste(round(rmse,1)," (",n,")",sep="")
     }
lb=cast(cldm,seas~latbin,value="resid",fun=sumfun)
colnames(lb)[1]="Season"
print(xtable(lb,caption="RMSE (count) by season and 20-Degree Latitudinal Bin."),type="latex")
@

\subsection{Land-Use Land-Cover Effects}


<<lulcbias,fig.cap="Boxplot showing residuals (MOD09-Station) by land cover type.">>=
bwplot(lulcc~resid,data=cldm,horiz=T,xlab="Residuals (MOD09-Observed)",varwidth=T,notch=T)+layer(panel.abline(v=0))
@


<<lulctable,results='asis'>>=

## Table of RMSE's by lulc by month

lulct=cast(cldm,lulcc~seas,value="resid",fun=sumfun)

print(xtable(lulct,caption="Table of RMSE's (count) by season (column) and Land Cover (row)."),type="latex",include.rownames=F,row.names=F)
@

% <<lulclevelplot>>=
% lulctl=ddply(cldm,c("seas","lulcc"),function(x) c(count=nrow(x),rmse=sqrt(mean(x$resid^2,na.rm=T))))
% lulctl=lulctl[!is.na(lulctl$lulcc),]
% 
% bgyr=colorRampPalette(c("blue","green","yellow","red"))
% levelplot(rmse~seas*lulcc,data=lulctl,col.regions=bgyr(1000),at=quantile(lulctl$rmse,seq(0,1,len=100),na.rm=T),xlab="Season",ylab="Land Cover")
% 
% @


\section{Regional Comparisons}

% <<RegionCompare>>=
% ## Compare with worldclim and NPP
% #wc=stack(as.list(paste("/mnt/data/jetzlab/Data/environ/global/worldclim/prec_",1:12,".bil",sep="")))
% wc_map=stack(as.list(paste("/mnt/data/jetzlab/Data/environ/global/worldclim/bio_12.bil",sep="")))
% #wc_dem=stack(as.list(paste("/mnt/data/jetzlab/Data/environ/global/worldclim/alt.bil",sep="")))
% 
% regs=list(
%   Cascades=extent(c(-122.8,-118,44.9,47)),
%   Hawaii=extent(c(-156.5,-154,18.75,20.5)),
%   Boliva=extent(c(-71,-63,-20,-15)),
%   Venezuela=extent(c(-69,-59,0,7)),
%   CFR=extent(c(17.75,22.5,-34.8,-32.6)),
%   Madagascar=extent(c(46,52,-17,-12))
%   #reg2=extent(c(-81,-70,-4,10))
%   )
% 
% 
% ## read in GEWEX 1-degree data
% gewex=mean(brick(paste(bigdata,"data/gewex/CA_PATMOSX_NOAA.nc",sep=""),varname="a_CA"))
% names(gewex)="PATMOS-x GEWEX AVHRR"
% 
% ## calculate 1-degree means of MODCF data
% #MOD_gewex=gewex
% #MOD_gewex@data@values=1:length(MOD_gewex@data@values)
% #MOD_gewex2=zonal(mod09a,MOD_gewex,fun='mean')
% 
% r="Venezuela"
% # ylab.right = "Cloud Frequency (%)",par.settings = list(layout.widths = list(axis.key.padding = 0.1,axis.left=0.6,ylab.right = 3,right.padding=2)),
% pars=list(layout.heights=list(key.bottom=2,key.top=1),layout.widths = list(axis.key.padding = 3,axis.left=0.6))
% p1=levelplot(crop(mod09a,regs[[r]]),col.regions=grey(seq(0,1,len=100)),at=seq(45,100,len=99),
%     colorkey=list(space="top",width=1,height=.75,labels=list(labels=c(50,75,100),at=c(50,75,100))),
%     cuts=99,margin=F,max.pixels=1e6,par.settings = pars)
% p2=levelplot(crop(gewex,regs[[r]]),col.regions=grey(seq(0,1,len=100)),at=seq(.45,1,len=99),cuts=99,margin=F,max.pixels=1e6,
%     colorkey=list(space="top",width=1,height=.75,labels=list(labels=c(50,75,100),at=c(.50,.75,1))),
%     par.settings = pars)
% tmap=crop(wc_map,regs[[r]])
% p3=levelplot(tmap,col.regions=grey(seq(0,1,len=100)),cuts=100,at=seq(tmap@data@min,tmap@data@max,len=100),margin=F,maxpixels=1e6,
%     colorkey=list(space="bottom",height=.75,width=1),xlab="",ylab="",main=names(regs)[r],useRaster=T,
%     par.settings = pars)
% p4=levelplot(crop(wc_dem,regs[[r]]),col.regions=grey(seq(0,1,len=100)),cuts=99,margin=F,max.pixels=1e6,
%     colorkey=list(space="bottom",height=.75,width=1),
%     par.settings = pars)#,labels=list(labels=c(1000,4000),at=c(1000,4000))))
% print(c("MODCF (%)"=p1,"PATMOS-x GEWEX (%)"=p2,"WorldClim Precip (mm)"=p3,"Elevation (m)"=p4,x.same=T,y.same=T,merge.legends=T,layout=c(2,2)))
% @

%\bibliography


\end{document}